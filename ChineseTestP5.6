<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>小学五年级，6课单词测试</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/hanzi-writer@3.5/dist/hanzi-writer.min.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+SC:wght@400;700&display=swap" rel="stylesheet">
    <!-- Add Inter font for Pinyin -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
    <!-- PWA: Removed link to manifest.json as it requires web hosting -->
    <!-- PWA: Removed Apple Touch Icon for iOS devices as it requires web hosting -->
    <!-- PWA: Removed theme color for browser UI as it requires web hosting -->

    <!-- Chosen Palette: Calm Harmony (主色调为柔和的灰白，搭配清新的蓝色和绿色作为强调色) -->
    <!-- Application Structure Plan: 这是一个单页的词汇问答游戏。结构分为：游戏介绍、游戏区域（显示词汇、汉字书写区、选项按钮）、得分区和游戏结束/重置区。选择此结构是为了提供一个清晰、直观的游戏流程，让用户专注于词汇学习，避免不必要的导航。 -->
    <!-- Visualization & Content Choices: 
        - 报告信息: 词汇列表 -> 目标: 学习/测试 -> 呈现方式: 问答形式，显示汉字、拼音和英文选项 -> 交互: 点击选项进行选择 -> 理由: 问答形式直接测试掌握程度。
    -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
    <style>
        body {
            font-family: 'Noto Sans SC', sans-serif;
            background-color: #f8f9fa; /* Light background */
            color: #343a40; /* Dark text */
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 2rem;
        }
        .card {
            background-color: #ffffff;
            border-radius: 0.75rem; /* Rounded corners */
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
            padding: 2rem;
        }
        .btn-primary {
            background-color: #007bff; /* Blue */
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            transition: background-color 0.2s;
        }
        .btn-primary:hover {
            background-color: #0056b3;
        }
        .btn-option {
            background-color: #e9ecef; /* Light gray */
            color: #343a40;
            padding: 0.75rem 1.25rem;
            border-radius: 0.5rem;
            transition: background-color 0.2s, transform 0.1s;
            width: 100%;
            text-align: left;
            font-size: 1.125rem; /* Increased font size for options (text-lg) */
            line-height: 1.75rem; /* Default line-height for text-lg */
        }
        .btn-option:hover {
            background-color: #dee2e6;
            transform: translateY(-2px);
        }
        .btn-option.correct {
            background-color: #28a745; /* Green for correct */
            color: white;
        }
        .btn-option.incorrect {
            background-color: #dc3545; /* Red for incorrect */
            color: white;
        }
        /* Removed hanzi-writer-container specific CSS as it's no longer used for a separate card */
        #pinyin-word {
            font-family: 'Inter', sans-serif; /* Apply Inter font for Pinyin */
            font-weight: 600; /* Keep semibold weight */
            font-size: 1.875rem; /* text-3xl */
            line-height: 2.25rem; /* md:text-4xl */
        }
        @media (min-width: 768px) {
            #pinyin-word {
                font-size: 2.25rem; /* md:text-4xl */
                line-height: 2.5rem;
            }
        }
        /* Adjusted logo and header styling for left alignment and larger logo */
        .header-section {
            display: flex;
            align-items: center; /* Vertically align items */
            margin-bottom: 1.5rem;
            padding-left: 1rem; /* Add some left padding to move it from the very edge */
            padding-top: 1rem; /* Add some top padding */
        }
        .logo {
            max-width: 300px; /* Increased size */
            height: auto;
            border-radius: 0.5rem; /* Slightly rounded corners for the image */
            margin-right: 1rem; /* Space between logo and title */
        }
        @media (max-width: 768px) {
            .logo {
                max-width: 180px; /* Adjust for smaller screens */
            }
            .header-section {
                padding-left: 0.5rem;
                padding-top: 0.5rem;
            }
        }
    </style>
</head>
<body class="min-h-screen flex items-center justify-center py-10">

    <div class="container bg-white card">
        <div class="header-section">
            <img src="https://awat.ac.th/images/header-132-1/logo.png" alt="Anuban WatAngthong School Logo" class="logo">
            <h1 class="text-2xl md:text-3xl font-bold text-blue-600">小学五年级，6课单词测试</h1>
        </div>
        <p class="text-center text-gray-600 text-lg mb-8">มาทดสอบคำศัพท์ภาษาจีนชั้นประถมศึกษาปีที่ 5 บทที่ 1-4 ของคุณกัน! เลือกความหมายภาษาไทยที่ถูกต้องสำหรับคำศัพท์ที่ปรากฏขึ้น</p>

        <div id="game-area" class="space-y-6">
            <div class="text-center mb-6">
                <p class="text-xl text-gray-700">คำศัพท์ปัจจุบัน:</p>
                <h2 id="chinese-word" class="text-6xl md:text-7xl font-bold text-gray-800 mb-2"></h2> <!-- Increased font size -->
                <p id="pinyin-word" class="text-2xl md:text-3xl text-blue-500 font-semibold mb-4"></p>
            </div>

            <div id="options-container" class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <!-- Options will be rendered here by JavaScript -->
            </div>

            <div id="feedback-message" class="text-center text-xl font-bold mt-6 hidden"></div>
            <div class="flex justify-center mt-8">
                <button id="next-word-btn" class="btn-primary hidden">คำถามถัดไป</button>
            </div>
        </div>

        <div id="game-over-area" class="text-center hidden">
            <h2 class="text-3xl font-bold mb-4 text-blue-600">จบเกมแล้ว!</h2>
            <p class="text-xl text-gray-700 mb-4">คุณตอบถูก <span id="final-score" class="font-bold text-green-600">0</span> ข้อ จากทั้งหมด <span id="total-questions" class="font-bold text-gray-800">0</span> ข้อ</p>
            <button id="restart-game-btn" class="btn-primary">เริ่มใหม่</button>
        </div>

        <div class="text-center mt-8 text-gray-500 text-sm">
            <p>คะแนนปัจจุบัน: <span id="score">0</span> / <span id="total-count">0</span></p>
        </div>

        <hr class="my-8 border-gray-300">

        <div id="upload-vocabulary-section" class="mt-8 p-6 bg-gray-50 rounded-lg shadow-inner">
            <h2 class="text-2xl font-bold text-gray-800 mb-4 text-center">อัปเดตคำศัพท์</h2>
            <p class="text-gray-600 mb-4 text-center">คุณสามารถอัปโหลดไฟล์ JSON เพื่ออัปデートชุดคำศัพท์ในเกมได้</p>
            <div class="flex flex-col items-center space-y-4">
                <input type="file" id="vocabulary-file-input" accept=".json" class="block w-full text-sm text-gray-500
                    file:mr-4 file:py-2 file:px-4
                    file:rounded-full file:border-0
                    file:text-sm file:font-semibold
                    file:bg-blue-50 file:text-blue-700
                    hover:file:bg-blue-100 cursor-pointer">
                <button id="upload-vocabulary-btn" class="btn-primary w-fit">อัปโหลดและเริ่มเกมใหม่</button>
                <div id="upload-feedback-message" class="text-sm mt-2 hidden"></div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let vocabulary = [ // Initial vocabulary
                {"chinese": "教学楼", "pinyin": "Jiàoxuéloú", "english": "อาคารเรียน"},
        				{"chinese": "图书馆", "pinyin": "Túshūguǎn", "english": "ห้องสมุด"},
        				{"chinese": "礼堂", "pinyin": "Lǐtáng", "english": "หอประชุม"},
        				{"chinese": "餐厅", "pinyin": "Cāntīng", "english": "โรงอาหาร"},
        				{"chinese": "足球场", "pinyin": "Zúqiúchǎng", "english": "สนามฟุตบอล"},
        				{"chinese": "篮球场", "pinyin": "Lánqiúchǎng", "english": "สนามบาสเกตบอล"}
            ];

            let currentWordIndex = 0;
            let score = 0;
            let totalQuestionsAnswered = 0;
            let shuffledVocabulary = [];

            const chineseWordEl = document.getElementById('chinese-word');
            const pinyinWordEl = document.getElementById('pinyin-word');
            const optionsContainer = document.getElementById('options-container');
            const feedbackMessageEl = document.getElementById('feedback-message');
            const nextWordBtn = document.getElementById('next-word-btn');
            const scoreEl = document.getElementById('score');
            const totalCountEl = document.getElementById('total-count');
            const gameArea = document.getElementById('game-area');
            const gameOverArea = document.getElementById('game-over-area');
            const finalScoreEl = document.getElementById('final-score');
            const totalQuestionsEl = document.getElementById('total-questions');
            const restartGameBtn = document.getElementById('restart-game-btn');
            
            const vocabularyFileInput = document.getElementById('vocabulary-file-input');
            const uploadVocabularyBtn = document.getElementById('upload-vocabulary-btn');
            const uploadFeedbackMessageEl = document.getElementById('upload-feedback-message');

            // --- Web Audio API for feedback sounds ---
            let audioCtx;

            function initAudioContext() {
                if (!audioCtx) {
                    audioCtx = new (window.AudioContext || window.webkitAudioContext)();
                }
            }

            function playCorrectSound() {
                initAudioContext();
                const oscillator = audioCtx.createOscillator();
                const gainNode = audioCtx.createGain();

                oscillator.connect(gainNode);
                gainNode.connect(audioCtx.destination);

                oscillator.type = 'sine';
                oscillator.frequency.value = 880; // A5 note
                gainNode.gain.setValueAtTime(0, audioCtx.currentTime);
                gainNode.gain.linearRampToValueAtTime(0.5, audioCtx.currentTime + 0.01);
                gainNode.gain.exponentialRampToValueAtTime(0.001, audioCtx.currentTime + 0.3);
                oscillator.start(audioCtx.currentTime);
                oscillator.stop(audioCtx.currentTime + 0.3);
            }

            function playIncorrectSound() {
                initAudioContext();
                const oscillator = audioCtx.createOscillator();
                const gainNode = audioCtx.createGain();

                oscillator.connect(gainNode);
                gainNode.connect(audioCtx.destination);

                oscillator.type = 'sawtooth'; // or 'square' for a harsher sound
                oscillator.frequency.value = 150; // Low frequency
                gainNode.gain.setValueAtTime(0, audioCtx.currentTime);
                gainNode.gain.linearRampToValueAtTime(0.4, audioCtx.currentTime + 0.01);
                gainNode.gain.exponentialRampToValueAtTime(0.001, audioCtx.currentTime + 0.4);
                oscillator.start(audioCtx.currentTime);
                oscillator.stop(audioCtx.currentTime + 0.4);
            }
            // --- End Web Audio API for feedback sounds ---

            function shuffleArray(array) {
                for (let i = array.length - 1; i > 0; i--) {
                    const j = Math.floor(Math.random() * (i + 1));
                    [array[i], array[j]] = [array[j], array[i]];
                }
                return array;
            }

            function getShuffledOptions(correctWord) {
                let options = [correctWord.english];
                let tempVocab = vocabulary.filter(word => word.english !== correctWord.english);
                tempVocab = shuffleArray(tempVocab);
                for (let i = 0; options.length < 4 && i < tempVocab.length; i++) {
                    options.push(tempVocab[i].english);
                }
                return shuffleArray(options);
            }

            function loadWord() {
                if (currentWordIndex >= shuffledVocabulary.length) {
                    endGame();
                    return;
                }

                const word = shuffledVocabulary[currentWordIndex];
                chineseWordEl.textContent = word.chinese;
                // Convert the first letter of pinyin to lowercase
                pinyinWordEl.textContent = word.pinyin.charAt(0).toLowerCase() + word.pinyin.slice(1);
                feedbackMessageEl.classList.add('hidden');
                nextWordBtn.classList.add('hidden');
                optionsContainer.innerHTML = '';

                const options = getShuffledOptions(word);
                const optionLabels = ['A', 'B', 'C', 'D']; // Define labels
                options.forEach((option, index) => {
                    const button = document.createElement('button');
                    button.textContent = `${optionLabels[index]}. ${option}`; // Prepend label
                    button.className = 'btn-option';
                    button.onclick = () => checkAnswer(button, option, word.english);
                    optionsContainer.appendChild(button);
                });

                updateScoreDisplay();
            }

            function checkAnswer(selectedButton, selectedOption, correctAnswer) {
                totalQuestionsAnswered++;
                const allOptionButtons = optionsContainer.querySelectorAll('.btn-option');
                allOptionButtons.forEach(btn => {
                    btn.disabled = true; // Disable all options after selection
                });

                if (selectedOption === correctAnswer) {
                    selectedButton.classList.add('correct');
                    feedbackMessageEl.textContent = '正确!';
                    feedbackMessageEl.classList.remove('text-red-600');
                    feedbackMessageEl.classList.add('text-green-600');
                    score++;
                    playCorrectSound(); // Play correct sound
                } else {
                    selectedButton.classList.add('incorrect');
                    feedbackMessageEl.textContent = `คำตอบผิด. คำตอบที่ถูกต้องคือ: ${correctAnswer}`; // Added Thai translation for "Correct answer is:"
                    feedbackMessageEl.classList.remove('text-green-600');
                    feedbackMessageEl.classList.add('text-red-600');
                    // Highlight the correct answer
                    allOptionButtons.forEach(btn => {
                        // Check if the button's text content contains the correct answer (after the label)
                        if (btn.textContent.includes(correctAnswer)) {
                            btn.classList.add('correct');
                        }
                    });
                    playIncorrectSound(); // Play incorrect sound
                }
                feedbackMessageEl.classList.remove('hidden');
                nextWordBtn.classList.remove('hidden');
                updateScoreDisplay();
            }

            function updateScoreDisplay() {
                scoreEl.textContent = score;
                totalCountEl.textContent = totalQuestionsAnswered;
            }

            function endGame() {
                gameArea.classList.add('hidden');
                gameOverArea.classList.remove('hidden');
                finalScoreEl.textContent = score;
                totalQuestionsEl.textContent = shuffledVocabulary.length;
            }

            function startGame() {
                shuffledVocabulary = shuffleArray([...vocabulary]); // Create a shuffled copy
                currentWordIndex = 0;
                score = 0;
                totalQuestionsAnswered = 0;
                gameArea.classList.remove('hidden');
                gameOverArea.classList.add('hidden');
                loadWord();
            }

            nextWordBtn.addEventListener('click', () => {
                currentWordIndex++;
                loadWord();
            });

            restartGameBtn.addEventListener('click', startGame);

            // --- New Vocabulary Upload Logic ---
            uploadVocabularyBtn.addEventListener('click', () => {
                const file = vocabularyFileInput.files[0];
                if (!file) {
                    uploadFeedbackMessageEl.textContent = '请选择一个JSON文件。'; // Please select a JSON file first.
                    uploadFeedbackMessageEl.classList.remove('text-green-600', 'hidden');
                    uploadFeedbackMessageEl.classList.add('text-red-600');
                    return;
                }

                const reader = new FileReader();
                reader.onload = (e) => {
                    try {
                        const uploadedData = JSON.parse(e.target.result);
                        // Basic validation: Check if it's an array and elements have required properties
                        if (Array.isArray(uploadedData) && uploadedData.every(item => 
                            typeof item.chinese === 'string' && 
                            typeof item.pinyin === 'string' && 
                            typeof item.english === 'string'
                        )) {
                            vocabulary = uploadedData; // Update the global vocabulary
                            startGame(); // Restart the game with new vocabulary
                            uploadFeedbackMessageEl.textContent = '词汇更新成功！游戏将重新开始。'; // Vocabulary updated successfully! Game will restart.
                            uploadFeedbackMessageEl.classList.remove('text-red-600', 'hidden');
                            uploadFeedbackMessageEl.classList.add('text-green-600');
                        } else {
                            throw new Error('JSON文件格式不正确。必须是包含 chinese, pinyin, 和 english 属性的对象的数组。'); // Invalid JSON format. Must be an array of objects with chinese, pinyin, and english.
                        }
                    } catch (error) {
                        let displayErrorMessage = `读取文件时出错: ${error.message}`; // Default error message
                        // Check if the error message indicates an XLSX file (starts with "PK")
                        if (error instanceof SyntaxError && e.target.result && e.target.result.startsWith('PK')) {
                            displayErrorMessage = '错误: 您上传的文件不是有效的JSON文件。它似乎是一个Excel (.xlsx) 文件。请在上传前将其转换为JSON。'; // Error: The file you uploaded is not a valid JSON file. It appears to be an Excel (.xlsx) file. Please convert it to JSON before uploading.
                        }
                        uploadFeedbackMessageEl.textContent = displayErrorMessage;
                        uploadFeedbackMessageEl.classList.remove('text-green-600', 'hidden');
                        uploadFeedbackMessageEl.classList.add('text-red-600');
                        console.error("Error processing uploaded vocabulary file:", error);
                    }
                };

                reader.onerror = () => {
                    uploadFeedbackMessageEl.textContent = '无法读取文件。'; // Could not read file.
                    uploadFeedbackMessageEl.classList.remove('text-green-600', 'hidden');
                    uploadFeedbackMessageEl.classList.add('text-red-600');
                };

                reader.readAsText(file);
            });
            // --- End New Vocabulary Upload Logic ---

            startGame(); // Start the game on page load

            // PWA: Removed Service Worker registration as it requires web hosting
        });
    </script>
</body>
</html>
